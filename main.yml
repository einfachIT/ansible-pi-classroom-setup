--- 
- name: just gather needed facts from all hosts
  hosts: all
  tasks:
    - name: Classify hosts depending on their processor architecture
      group_by:
        key: arch_{{ ansible_facts['architecture'] }}
      changed_when: false

    - name: debug arch
      debug:
        msg: "{{ ansible_facts['architecture'] }}"

- name: simple Plabook to provision fresh raspberrypi
  hosts: all
  vars: 
    installation_os_user: pi
    installation_os_group: pi
  roles:
    - { role: bassinator.localisation, loc_timezone: Europe/Zurich, keyboard_layout: de, keyboard_variant: de }
    - { role: bassinator.mosquitto, tags: ["epic", "mqtt"] }
    - { role: bassinator.simplehttp, tags: ["epic", "server"] }
    - { role: bassinator.autoarchive, tags: ["epic", "client"] }
    - { role: bassinator.usbbackup, tags: ["epic", "client", "server"] }
    - { role: bassinator.net_sync, tags: ["epic", "client"] }
    - { role: bassinator.ssh_tor, tags: ["epic","server"] }
    - { role: bassinator.tigerjython, tags: ["epic", "client", "python"] }
  tasks:
  - name: Install scratch3 OS package
    apt:
      name: 'scratch3'
  remote_user: pi
  become: yes
  

# now just on i386 (raspberry Pi Desktop)
- hosts:
   - arch_i386
  vars:
    installation_os_user: pi
    installation_os_group: pi
  gather_facts: False
  roles:
    - { role: bassinator.pi_aseba, tags: ["epic", "aseba", "thymio"] }

# now just arm 64 bit
- hosts:
   - arch_aarch64
  vars:
    installation_os_user: pi
    installation_os_group: pi
  gather_facts: False
  roles:
    - { role: bassinator.pi_aseba, tags: ["epic", "client", "aseba", "thymio"] }
  tasks:
    - name: install scratch3 package
      apt:
        name:
          - scratch3
        state: present

# now just arm 32 bit
- hosts:
   - arch_aarch
  vars:
    installation_os_user: pi
    installation_os_group: pi
  gather_facts: False
  roles:
    - { role: bassinator.scratch_mqtt, tags: ["epic", "client", "mqtt"] }
